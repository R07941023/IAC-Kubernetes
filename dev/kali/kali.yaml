# Deploy service
apiVersion: v1
kind: Service
metadata:
  name: kali # pod name
  namespace: infra-net # namespace name
spec:
  type: NodePort
  ports:
  - name: ssh # port setting
    protocol: TCP
    port: 22  # service port
    targetPort: 22  # container port
    nodePort: 30522 # node port
  - name: rdp # port setting
    protocol: TCP
    port: 3389  # service port
    targetPort: 30589  # container port
  - name: httpserver # port setting
    protocol: TCP
    port: 8000  # service port
    targetPort: 30580  # container port
  - name: reverse # port setting
    protocol: TCP
    port: 4444  # service port
    targetPort: 30544  # container port
  selector:
    app: kali # pod name
   
---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
# 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kali # pod name
  name: kali  # pod name
  namespace: infra-net # namespace name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kali
  template:
    metadata:
      labels:
        app: kali
    spec:
      containers:
      - name: kali # container name
        image: yenyinglu/kali
        imagePullPolicy: IfNotPresent
        securityContext:
            privileged: true
            runAsUser: 0
        command: ["/bin/bash", "-c"]
        args:
        - >
          sysctl -w net.ipv6.conf.all.disable_ipv6=0 &&
          service ssh start &&
          service xrdp restart &&
          tail -f /dev/null
        ports:
        - containerPort: 22 # container port
          name: ssh
        - containerPort: 3389 # container port
          name: rdp
        - containerPort: 8000 # container port
          name: httpserver
        - containerPort: 4444 # container port
          name: reverse
        volumeMounts:
        - name: cyberscript # mount name
          mountPath: /root/cyberScript  # mount path
      volumes:
        - name: cyberscript # mount name
          persistentVolumeClaim:
            claimName: kali-data-pvc